{"version":3,"sources":["components/Form.js","components/FilterButton.js","components/Todo.js","components/List.js","components/withListLoading.js","components/Home.js","components/About.js","components/Error.js","components/Nav.js","components/API.js","components/theme.js","components/Reducer.js","App.js","index.js"],"names":["Form","props","useState","name","setName","onSubmit","e","preventDefault","addTask","className","htmlFor","type","id","autoComplete","value","onChange","target","FilterButton","aria-pressed","isPressed","onClick","setFilter","Todo","isEditing","setEditing","newName","setNewName","editingTemplate","editTask","viewTemplate","defaultChecked","completed","toggleTaskCompleted","deleteTask","List","repos","length","map","repo","key","description","language","created_at","WithListLoading","Component","isLoading","style","textAlign","fontSize","DATA","FILTER_MAP","All","Active","task","Completed","FILTER_NAMES","Object","keys","Home","tasks","setTasks","filter","ListLoading","withListLoading","loading","appState","setAppState","updatedTasks","useEffect","data","localStorage","getItem","JSON","parse","setItem","stringify","taskList","filterList","editedTaskList","remainingTasks","fetch","then","res","json","tasksNoun","headingText","newTask","nanoid","clear","window","location","reload","role","aria-labelledby","About","Error","Nav","dispatch","useContext","AppContext","NavBar","NavMenu","to","NavLink","NavToggle","styled","div","theme","navColor","textColor","API","base","easeOutBack","colorWhite","colorBlack","dark","backgroundColor","light","initialState","currentTheme","Reducer","state","action","newThemeKey","createContext","GlobalStyles","createGlobalStyle","App","useReducer","Provider","path","component","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.67374fed.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nfunction Form(props) {\r\n  const [name, setName] = useState(\"\");\r\n\r\n  function handleChange(e) {\r\n    setName(e.target.value);\r\n  }\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    props.addTask(name);\r\n    setName(\"\");\r\n  }\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <h2 className=\"label-wrapper\">\r\n        <label htmlFor=\"new-todo-input\" className=\"label__lg\">\r\n          What needs to be done?\r\n        </label>\r\n      </h2>\r\n      <input\r\n        type=\"text\"\r\n        id=\"new-todo-input\"\r\n        className=\"input input__lg\"\r\n        name=\"text\"\r\n        autoComplete=\"off\"\r\n        value={name}\r\n        onChange={handleChange}\r\n      />\r\n      <button type=\"submit\" className=\"btn btn__primary btn__lg\">\r\n        Add\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default Form;","import React from \"react\";\r\n\r\nfunction FilterButton(props) {\r\n    return (\r\n      <button\r\n        type=\"button\"\r\n        className=\"btn toggle-btn\"\r\n        aria-pressed={props.isPressed}\r\n        onClick={() => props.setFilter(props.name)}\r\n      >\r\n        <span className=\"visually-hidden\">Show </span>\r\n        <span>{props.name}</span>\r\n        <span className=\"visually-hidden\"> tasks</span>\r\n      </button>\r\n    );\r\n}\r\n\r\nexport default FilterButton;","import React, { useState } from \"react\";\r\n\r\nexport default function Todo(props) {\r\n  const [isEditing, setEditing] = useState(false);\r\n  const [newName, setNewName] = useState('');\r\n  const [filter, setFilter] = useState('All');\r\n  function handleChange(e) {\r\n    setNewName(e.target.value);\r\n  }\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    props.editTask(props.id, newName);\r\n    setNewName(\"\");\r\n    setEditing(false);\r\n  }\r\n  const editingTemplate = (\r\n  <form className=\"stack-small\" onSubmit={handleSubmit}>\r\n      <div className=\"form-group\">\r\n        <label className=\"todo-label\" htmlFor={props.id}>\r\n          New name for {props.name}\r\n        </label>\r\n        <input\r\n          id={props.id}\r\n          className=\"todo-text\"\r\n          type=\"text\"\r\n          value={newName}\r\n          onChange={handleChange}\r\n        />\r\n      </div>\r\n      <div className=\"btn-group\">\r\n      <button\r\n        type=\"button\"\r\n        className=\"btn todo-cancel\"\r\n        onClick={() => setEditing(false)}\r\n      >\r\n        Cancel\r\n        <span className=\"visually-hidden\">renaming {props.name}</span>\r\n      </button>\r\n        <button type=\"submit\" className=\"btn btn__primary todo-edit\">\r\n          Save\r\n          <span className=\"visually-hidden\">new name for {props.name}</span>\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n  const viewTemplate = (\r\n    <div className=\"stack-small\">\r\n      <div className=\"c-cb\">\r\n          <input\r\n            id={props.id}\r\n            type=\"checkbox\"\r\n            defaultChecked={props.completed}\r\n            onChange={() => props.toggleTaskCompleted(props.id)}\r\n          />\r\n          <label className=\"todo-label\" htmlFor={props.id}>\r\n            {props.name}\r\n          </label>\r\n        </div>\r\n        <div className=\"btn-group\">\r\n        <button type=\"button\" className=\"btn\" onClick={() => setEditing(true)}>\r\n          Edit <span className=\"visually-hidden\">{props.name}</span>\r\n        </button>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn__danger\"\r\n            onClick={() => props.deleteTask(props.id)}\r\n          >\r\n            Delete <span className=\"visually-hidden\">{props.name}</span>\r\n          </button>\r\n        </div>\r\n    </div>\r\n  );\r\n  return <li className=\"todo\">{isEditing ? editingTemplate : viewTemplate}</li>;\r\n}\r\n  ","import React from 'react';\r\nconst List = (props) => {\r\n  const { repos } = props;\r\n  if (!repos || repos.length === 0) return <p>No repos, sorry</p>;\r\n  return (\r\n    <ul>\r\n      <h2 className='list-head'>Available Public Repositories</h2>\r\n      {repos.map((repo) => {\r\n        return (\r\n          <li key={repo.id} className='list'>\r\n            <span className='repo-text'>{repo.name} </span>\r\n            <span className='repo-description'>{repo.description} </span>\r\n            <span className>Written in {repo.language} </span>\r\n            <span className>on {repo.created_at}</span>\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\nexport default List;\r\n","import React from 'react';\r\n\r\nfunction WithListLoading(Component) {\r\n  return function WihLoadingComponent({ isLoading, ...props }) {\r\n    if (!isLoading) return <Component {...props} />;\r\n    return (\r\n      <p style={{ textAlign: 'center', fontSize: '30px' }}>\r\n        Hold on, fetching data may take some time :)\r\n      </p>\r\n    );\r\n  };\r\n}\r\nexport default WithListLoading;","import { nanoid } from \"nanoid\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Form from \"./Form\";\r\nimport FilterButton from \"./FilterButton\";\r\nimport Todo from \"./Todo\";\r\nimport List from \"./List\";\r\nimport withListLoading from \"./withListLoading\";\r\n\r\nconst DATA = [\r\n    { id: \"todo-0\", name: \"Eat\", completed: true },\r\n    { id: \"todo-1\", name: \"Sleep\", completed: false },\r\n    { id: \"todo-2\", name: \"Repeat\", completed: false }\r\n];\r\n\r\nconst FILTER_MAP = {\r\n  All: () => true,\r\n  Active: task => !task.completed,\r\n  Completed: task => task.completed\r\n};\r\nconst FILTER_NAMES = Object.keys(FILTER_MAP);\r\n\r\nfunction Home() {\r\n  const [tasks, setTasks] = useState(DATA);\r\n  const [filter, setFilter] = useState('All');\r\n  const ListLoading = withListLoading(List);\r\n  const [appState, setAppState] = useState({\r\n    loading: false,\r\n    repos: null,\r\n  });\r\n\r\n  useEffect(() => {\r\n    const data = localStorage.getItem('listOfTasks')\r\n    if (data) {\r\n      setTasks(JSON.parse(data));\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('listOfTasks', JSON.stringify(tasks));\r\n  });\r\n\r\n  \r\n  function addTask(name) {\r\n    const newTask = { id: \"todo-\" + nanoid(), name: name, completed: false };\r\n    setTasks([...tasks, newTask]);\r\n  }\r\n  function toggleTaskCompleted(id) {\r\n    const updatedTasks = tasks.map(task => {\r\n      // if this task has the same ID as the edited task\r\n      if (id === task.id) {\r\n        // use object spread to make a new object\r\n        // whose `completed` prop has been inverted\r\n        return {...task, completed: !task.completed}\r\n      }\r\n      return task;\r\n    });\r\n    setTasks(updatedTasks);\r\n  }\r\n  \r\n  const taskList = tasks\r\n  .filter(task => FILTER_MAP[filter](task))\r\n  .map(task => (\r\n    <Todo\r\n      id={task.id}\r\n      name={task.name}\r\n      completed={task.completed}\r\n      key={task.id}\r\n      toggleTaskCompleted={toggleTaskCompleted}\r\n      deleteTask={deleteTask}\r\n      editTask={editTask}\r\n    />\r\n  ));\r\n  const filterList = FILTER_NAMES.map(name => (\r\n    <FilterButton\r\n      key={name}\r\n      name={name}\r\n      isPressed={name === filter}\r\n      setFilter={setFilter}\r\n    />\r\n  ));\r\n  function editTask(id, newName) {\r\n    const editedTaskList = tasks.map(task => {\r\n    // if this task has the same ID as the edited task\r\n      if (id === task.id) {\r\n        //\r\n        return {...task, name: newName}\r\n            }\r\n      return task;\r\n    });\r\n    setTasks(editedTaskList);\r\n  }\r\n  function deleteTask(id) {\r\n    const remainingTasks = tasks.filter(task => id !== task.id);\r\n    setTasks(remainingTasks);\r\n  }\r\n  function clearStorage() {\r\n    localStorage.clear();\r\n    window.location.reload();\r\n    setTasks([]);\r\n  }\r\n\r\n  useEffect(() => {\r\n    setAppState({ loading: true});\r\n    const apiUrl = `https://api.github.com/users/hacktivist123/repos`;\r\n    fetch(apiUrl)\r\n      .then((res) => res.json())\r\n      .then((repos) => {\r\n        setAppState({ loading: false, repos: repos });\r\n      });\r\n  }, [setAppState]);\r\n\r\n\r\n  const tasksNoun = taskList.length !== 1 ? 'tasks' : 'task';\r\n  const headingText = `${taskList.length} ${tasksNoun} remaining`;\r\n  return (\r\n    <main>\r\n      <div className='container'>\r\n      <h1>My Repositories</h1>\r\n      </div>\r\n      <div>\r\n      <ListLoading isLoading={appState.loading} repos={appState.repos} />\r\n      </div>\r\n      <div className=\"todoapp stack-large\">\r\n        <Form addTask={addTask} />\r\n        <button onClick={clearStorage} type=\"button\" className=\"btn btn__secondary btn__lg\">\r\n          Clear\r\n        </button>\r\n        <div className=\"filters btn-group stack-exception\">\r\n        {filterList}\r\n        </div>\r\n        <h3 id=\"list-heading\">{headingText}</h3>\r\n        <ul\r\n          role=\"list\"\r\n          className=\"todo-list stack-large stack-exception\"\r\n          aria-labelledby=\"list-heading\"\r\n        >\r\n          {taskList}\r\n          </ul>\r\n          </div>\r\n    </main>\r\n    \r\n  );\r\n}\r\n\r\nexport default Home;","import React from \"react\";\r\n\r\nfunction About() {\r\n    return <p>Some placeholder text</p>;\r\n}\r\n\r\nexport default About;","import React from \"react\";\r\n\r\nfunction Error() {\r\n    return <h1>Oops! Page not found!</h1>;\r\n}\r\n\r\nexport default Error;","import React, { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { AppContext } from \"../App\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Nav() {\r\n  const { dispatch } = useContext(AppContext);\r\n\r\n  const toggleTheme = () => {\r\n    dispatch({ type: \"toggleTheme\" });\r\n  };\r\n\r\n  return (\r\n    <NavBar>\r\n      <NavMenu>\r\n      <nav>\r\n            <Link to=\"/\">Home </Link>\r\n            <Link to=\"/about\">About Us </Link>\r\n            <Link to=\"/api\">API </Link>\r\n        </nav>\r\n        <NavLink>Contact</NavLink>\r\n      </NavMenu>\r\n      <NavToggle onClick={toggleTheme}>Toggle theme</NavToggle>\r\n    </NavBar>\r\n  );\r\n}\r\n\r\n\r\n\r\nconst NavBar = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  background: ${props => props.theme.navColor};\r\n  min-height: 50px;\r\n  font-size: 1.2rem;\r\n  font-weight: 500;\r\n  color: ${props => props.theme.textColor};\r\n  list-style: none;\r\n`;\r\n\r\nconst NavMenu = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: flex-start;\r\n`;\r\n\r\nconst NavLink = styled.div`\r\n  display: block;\r\n  padding: 1rem;\r\n  transition: 250ms ease background-color;\r\n  &:hover {\r\n    cursor: pointer;\r\n    background-color: skyblue;\r\n  }\r\n`;\r\n\r\nconst NavToggle = styled(NavLink)`\r\n  text-decoration: underline;\r\n`;","import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport List from \"./List\";\r\nimport withListLoading from \"./withListLoading\";\r\nimport \"../Api.css\";\r\n\r\nfunction API() {\r\n    const ListLoading = withListLoading(List);\r\n    const [appState, setAppState] = useState({\r\n      loading: false,\r\n      repos: null,\r\n    });\r\n  \r\n\r\n    useEffect(() => {\r\n        setAppState({ loading: true});\r\n        const apiUrl = `https://api.github.com/users/hacktivist123/repos`;\r\n        fetch(apiUrl)\r\n          .then((res) => res.json())\r\n          .then((repos) => {\r\n            setAppState({ loading: false, repos: repos });\r\n          });\r\n      }, [setAppState]);\r\n  \r\n    // componentDidMount() {\r\n    //   axios.get(`https://jsonplaceholder.typicode.com/users/1`)\r\n    // //   axios.get('https://official-joke-api.appspot.com/jokes/random')\r\n    //     .then(res => {\r\n    //       const persons = res.data;\r\n    //       this.setState({ persons });\r\n    //       console.log('Response: ', res);\r\n    //     })\r\n    // }\r\n  \r\n  \r\n  return(\r\n    <main>\r\n        <div className='container'>\r\n        <h1>My Repositories</h1>\r\n        </div>\r\n        <div>\r\n        <ListLoading isLoading={appState.loading} repos={appState.repos} />\r\n        </div>\r\n    </main>\r\n  );\r\n}\r\nexport default API;\r\n\r\n// class API extends React.Component { \r\n//     componentDidMount() {\r\n//         const apiUrl = 'https://official-joke-api.appspot.com/jokes/random';\r\n//         fetch(apiUrl)\r\n//             .then((response) => response.json())\r\n//             .then((data) => console.log('Results: ', data));\r\n\r\n//     }\r\n//     render() {\r\n//         return <h1>API Component Has Mounted, Check the browser 'console' </h1>;\r\n//     }\r\n// }\r\n","const base = {\r\n    easeOutBack: \"cubic-bezier(0.34, 1.56, 0.64, 1)\",\r\n    colorWhite: \"rgb(255, 255, 255)\",\r\n    colorBlack: \"rgb(0, 0, 0)\"\r\n  };\r\n  \r\n  const dark = {\r\n    id: \"dark\",\r\n    ...base,\r\n    backgroundColor: \"white\",\r\n    textColor: 'black',\r\n    navColor: \"indianred\"\r\n  };\r\n  \r\n  const light = {\r\n    id: \"light\",\r\n    ...base,\r\n    backgroundColor: \"#3498db\",\r\n    textColor: 'magenta',\r\n    navColor: \"springgreen\"\r\n  };\r\n  \r\n  export const theme = { dark, light };","import { theme } from \"./theme\";\r\n\r\nexport const initialState = {\r\n  currentTheme: theme.dark\r\n};\r\n\r\nexport function Reducer(state, action) {\r\n  switch (action.type) {\r\n    case \"setTheme\":\r\n      return { ...state, currentTheme: action.value };\r\n    case \"updateTheme\":\r\n      return {\r\n        ...state,\r\n        currentTheme: { ...theme[state.currentTheme.id], ...action.value }\r\n      };\r\n    case \"toggleTheme\": {\r\n      const newThemeKey = state.currentTheme.id === \"dark\" ? \"light\" : \"dark\";\r\n      return { ...state, currentTheme: theme[newThemeKey] };\r\n    }\r\n    default:\r\n      throw new Error();\r\n  }\r\n}","import React, { createContext, useReducer } from \"react\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport { createGlobalStyle, ThemeProvider } from \"styled-components\";\r\n\r\n\r\nimport Home from './components/Home'\r\nimport About from './components/About'\r\nimport Error from './components/Error'\r\nimport Nav from \"./components/Nav\"\r\nimport API from \"./components/API\"\r\n\r\n\r\nimport { initialState, Reducer } from \"./components/Reducer\";\r\n\r\nexport const AppContext = createContext();\r\n\r\nfunction App() {\r\n  const [state, dispatch] = useReducer(Reducer, initialState);\r\n  const { currentTheme } = state;\r\n  return (\r\n    <div className=\"todoapp stack-large\">\r\n      <ThemeProvider theme={currentTheme}>\r\n      <AppContext.Provider value={{ ...state, dispatch }}>\r\n          <GlobalStyles />\r\n          <Nav />\r\n          <BrowserRouter>\r\n          <Switch>\r\n            <Route path='/' component={Home} exact />\r\n            <Route path='/about' component={About} />\r\n            <Route path='/api' component={API} />\r\n            <Route component={Error} />\r\n          </Switch>\r\n          </BrowserRouter>\r\n          </AppContext.Provider>\r\n        </ThemeProvider>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst GlobalStyles = createGlobalStyle`\r\n  html, body {\r\n    padding: 0;\r\n    margin: 0;\r\n    box-sizing: border-box;\r\n    background: ${props => props.theme.backgroundColor};\r\n    color: ${props => props.theme.textColor};\r\n    font-family: sans-serif;\r\n  }\r\n`;\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n    <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>, \r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}